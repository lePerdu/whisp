; TODO Figure out a way to define this later on (with other string functions)
(def! string-concat (fn strings
  (_string-concat-helper (make-output-string) strings)))

(def! _string-concat-helper (fn (acc strings)
  (if (null? strings)
    (output-string-get acc)
    (do
      (output-string-write-string acc (car strings))
      (_string-concat-helper acc (cdr strings))))))

(def! load-library (fn (filename)
  ((compile-file
    (string-concat *library-path* (->string *path-separator*) filename)))))

(load-library "basic.wh")
(load-library "macros.wh")
(load-library "bool.wh")
(load-library "list.wh")
(load-library "func.wh")
(load-library "math.wh")
(load-library "string.wh")
(load-library "array.wh")
(load-library "record.wh")
(load-library "generic.wh")
(load-library "vector.wh")
(load-library "hash-table.wh")
(load-library "array-builder.wh")
(load-library "fluid.wh")
(load-library "ports.wh")
(load-library "exception.wh")
(load-library "repl.wh")
(load-library "startup.wh")
