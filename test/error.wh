(defgroup! error
  (defgroup! guard
    (deftest! no-op-for-no-error
      (assert= 2
        (guard (err (raise "caught error")) 2)))

    (deftest! catches-error
      (assert= 2
        (guard (err 2) (raise "exception"))))

    (deftest! raise-error-in-handler
      (assert-equal "error from handler"
        (guard
          (err err)
          (guard
            (err (raise "error from handler"))
            (raise "error from body"))))))

  (defgroup! guard-cond
    (deftest! no-op-for-no-error
      (assert= 2
        (guard-cond (err (else (raise "caught error"))) 2)))

    (deftest! catches-matching error
      (assert= 2
        (guard-cond (err ((string? err) 2)) (raise "exception"))))

    (deftest! does-not-catch-non-matching-error
      (assert-error
        (guard-cond (err ((string? err) 2)) (raise 4.0))))

    (deftest! raise-error-from-matching-branch
      ; TODO Add/adjust assert-error to allow filtering the error
      (assert-equal "error from handler"
        (guard
          (err err)
          (guard-cond
            (err
              ((string? err) 2)
              ((number? err) (raise "error from handler")))
            (raise 4)))))))
