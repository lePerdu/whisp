; Old behavior was different when macros are defined on top-level,
; so keep them here to detect such bugs
(defsyntax! (replace-with-2 . args) 2)
(defsyntax! (noop-macro arg) arg)

(defgroup! macro
  (deftest! simple-macro-replaced
    (assert= 2 (replace-with-2)))

  (deftest! nested-macro-replaced
    (assert= 2 (noop-macro (replace-with-2 abc))))

  (comment
    (defgroup! macroexpand-1
      (deftest! expands-only-layer
        (assert=
          2
          (macroexpand-1 (replace-with-2 abc))))
      (deftest! expands-1-layer
        (assert-equal
          (list 'replace-with-2 'abc)
          (macroexpand-1 (noop-macro (replace-with-2 abc)))))

      (deftest! does-not-expand-non-head-position
        (assert-equal
          (list 'if 1 (list 'replace-with-2 'abc))
          (macroexpand-1 (if 1 (replace-with-2 abc))))))

    (defgroup! macroexpand
      (deftest! expands-only-layer
        (assert=
          2
          (macroexpand (replace-with-2 abc))))
      (deftest! expands-2-layers
        (assert-equal
          2
          (macroexpand (noop-macro (replace-with-2 abc)))))
      (deftest! does-not-expand-non-head-position
        (assert-equal
          (list 'if 1 (list 'replace-with-2 'abc))
          (macroexpand (if 1 (replace-with-2 abc))))))

    (defgroup! macroexpand-rec
      (deftest! expands-only-layer
        (assert=
          2
          (macroexpand-rec (replace-with-2 abc))))
      (deftest! expands-2-layers
        (assert-equal
          2
          (macroexpand-rec (noop-macro (replace-with-2 abc)))))
      (deftest! expands-non-head-position
        (assert-equal
          (list 'if 1 2)
          (macroexpand-rec (if 1 (replace-with-2 abc)))))
      (deftest! does-not-expand-in-quote
        (assert-equal
          (list 'quote (list 'replace-with-2 'abc))
          (macroexpand-rec '(replace-with-2 abc))))))

  (deftest! quote-special-syntax-same-as-form
    (assert-equal '(1 2) (quote (1 2))))

  (deftest! macros-not-replaced-in-quote
    (assert (symbol? 'replace-with-2))
    (assert-equal (list 'replace-with-2 'abc) '(replace-with-2 abc)))

  (deftest! macros-expanded-in-inner-scope
    (defsyntax! (twice expr) (list 'do expr expr))

    (defn! (f) (do
      (def! a (atom 0))
      (twice (swap! a inc))
      @a))
    (assert= 2 (f)))

  (deftest! macros-expanded-in-scope
    (defn! (f) (do
      (defsyntax! (twice expr) (list 'do expr expr))
      (def! a (atom 0))
      (twice (swap! a inc))
      @a))
    (assert= 2 (f)))

  (deftest! macros-shadowed-in-scope
    (defsyntax! (twice expr) (list 'do expr expr))

    (defn! (f) (do
      ; Bad definition of twice
      (defsyntax! (twice expr) (list 'do expr))
      (def! a (atom 0))
      (twice (swap! a inc))
      @a))
    (assert= 1 (f)))

  (deftest! macros-not-expanded-in-outer-scope
    (defn! (f) (do
      (defsyntax! (twice expr) (list 'do expr expr))
      nil))
    (f)

    (def! a (atom 0))
    (assert-error (twice (swap! a inc)))))
